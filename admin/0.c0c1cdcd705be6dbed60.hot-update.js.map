{"version":3,"file":"0.c0c1cdcd705be6dbed60.hot-update.js","sources":["webpack:///./src/templates/index-page.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { graphql } from \"gatsby\";\r\n\r\nimport Layout from \"../components/Layout\";\r\nimport Birthdays from \"../components/Birthdays\";\r\nimport InAndOut from \"../components/InAndOut\";\r\n\r\nexport const IndexPageTemplate = ({\r\n    image,\r\n    title,\r\n    subtitle,\r\n    heading,\r\n    mainpitch,\r\n    description,\r\n    birthdays,\r\n    inandout,\r\n    myentrada\r\n}) => (\r\n    <div>\r\n        <div\r\n            className=\"full-width-image margin-top-0\"\r\n            style={{\r\n                backgroundImage: `url(${\r\n                    !!image.childImageSharp\r\n                        ? image.childImageSharp.fluid.src\r\n                        : image\r\n                })`,\r\n                backgroundPosition: `top left`,\r\n                backgroundAttachment: `fixed`\r\n            }}\r\n        >\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    height: \"150px\",\r\n                    lineHeight: \"1\",\r\n                    justifyContent: \"space-around\",\r\n                    alignItems: \"left\",\r\n                    flexDirection: \"column\"\r\n                }}\r\n            >\r\n                <h1\r\n                    className=\"has-text-weight-bold is-size-3-mobile is-size-2-tablet is-size-1-widescreen\"\r\n                    style={{\r\n                        boxShadow:\r\n                            \"rgb(27,55,101) 0.5rem 0px 0px, rgb(27,55,101) -0.5rem 0px 0px\",\r\n                        backgroundColor: \"rgb(27,55,101)\",\r\n                        color: \"white\",\r\n                        lineHeight: \"1\",\r\n                        padding: \"0.25em\"\r\n                    }}\r\n                >\r\n                    {title}\r\n                </h1>\r\n                {subtitle ? (\r\n                    <h3\r\n                        className=\"has-text-weight-bold is-size-5-mobile is-size-5-tablet is-size-4-widescreen\"\r\n                        style={{\r\n                            boxShadow:\r\n                                \"rgb(27,55,101) 0.5rem 0px 0px, rgb(27,55,101) -0.5rem 0px 0px\",\r\n                            backgroundColor: \"rgb(27,55,101)\",\r\n                            color: \"white\",\r\n                            lineHeight: \"1\",\r\n                            padding: \"0.25em\",\r\n                            textAlign: \"center\"\r\n                        }}\r\n                    >\r\n                        {subtitle}\r\n                    </h3>\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n            </div>\r\n        </div>\r\n        <section className=\"section section--gradient\">\r\n            <div className=\"container\">\r\n                <div className=\"section\">\r\n                    <div className=\"columns\">\r\n                        <div className=\"column is-10 is-offset-1\">\r\n                            <div className=\"content\">\r\n                                <div className=\"content\">\r\n                                    <div className=\"tile\">\r\n                                        <h1 className=\"title\">\r\n                                            {mainpitch.title}\r\n                                        </h1>\r\n                                    </div>\r\n                                    <div className=\"tile\">\r\n                                        <h3 className=\"subtitle\">\r\n                                            {mainpitch.description}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"columns\">\r\n                                    <div className=\"column is-12\">\r\n                                        <h3 className=\"has-text-weight-semibold is-size-2\">\r\n                                            {heading}\r\n                                        </h3>\r\n                                        <p>{description}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <Birthdays birthdays={birthdays} />\r\n                                <InAndOut inandout={inandout} />\r\n                                {myentrada &&\r\n                                myentrada.cities &&\r\n                                myentrada.cities.length ? (\r\n                                    <div className=\"column is-12\">\r\n                                        <img\r\n                                            src=\"/img/my-entrada.png\"\r\n                                            alt=\"my-entrada\"\r\n                                        />\r\n                                        <ul className=\"taglist\">\r\n                                            {myentrada.cities.map((c, i) => (\r\n                                                <li key={i}>\r\n                                                    <div className=\"column is-6\">\r\n                                                        <h3 className=\"has-text-weight-semibold\">\r\n                                                            {c.name}\r\n                                                        </h3>\r\n                                                        <img\r\n                                                            src={\r\n                                                                !!c.image\r\n                                                                    .childImageSharp\r\n                                                                    ? c.image\r\n                                                                          .childImageSharp\r\n                                                                          .fluid\r\n                                                                          .src\r\n                                                                    : c.image\r\n                                                            }\r\n                                                            alt=\"my-entrada\"\r\n                                                        />\r\n                                                    </div>\r\n                                                </li>\r\n                                            ))}\r\n                                            <li key={-1}>\r\n                                                <span>{myentrada.text}</span>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <div className=\"column is-12 has-text-centered\">\r\n                                            <a\r\n                                                className=\"btn\"\r\n                                                href=\"https://myentrada.com\"\r\n                                            >\r\n                                                Ir a my entrada\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                ) : (\r\n                                    <div />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n);\r\n\r\nIndexPageTemplate.propTypes = {\r\n    image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\r\n    title: PropTypes.string,\r\n    subtitle: PropTypes.string,\r\n    heading: PropTypes.string,\r\n    mainpitch: PropTypes.object,\r\n    description: PropTypes.string,\r\n    birthdays: PropTypes.object,\r\n    inandout: PropTypes.object\r\n};\r\n\r\nconst IndexPage = ({ data }) => {\r\n    const { frontmatter } = data.markdownRemark;\r\n\r\n    return (\r\n        <Layout>\r\n            <IndexPageTemplate\r\n                image={frontmatter.image}\r\n                title={frontmatter.title}\r\n                subtitle={frontmatter.subtitle}\r\n                heading={frontmatter.heading}\r\n                mainpitch={frontmatter.mainpitch}\r\n                description={frontmatter.description}\r\n                birthdays={frontmatter.birthdays}\r\n                inandout={frontmatter.inandout}\r\n                myentrada={frontmatter.myentrada}\r\n            />\r\n        </Layout>\r\n    );\r\n};\r\n\r\nIndexPage.propTypes = {\r\n    data: PropTypes.shape({\r\n        markdownRemark: PropTypes.shape({\r\n            frontmatter: PropTypes.object\r\n        })\r\n    })\r\n};\r\n\r\nexport default IndexPage;\r\n\r\nexport const pageQuery = graphql`\r\n    query IndexPageTemplate {\r\n        markdownRemark(frontmatter: { templateKey: { eq: \"index-page\" } }) {\r\n            frontmatter {\r\n                title\r\n                subtitle\r\n                image {\r\n                    childImageSharp {\r\n                        fluid(maxWidth: 2048, quality: 100) {\r\n                            ...GatsbyImageSharpFluid\r\n                        }\r\n                    }\r\n                }\r\n                mainpitch {\r\n                    title\r\n                    description\r\n                }\r\n                heading\r\n                description\r\n                birthdays {\r\n                    name\r\n                    image {\r\n                        childImageSharp {\r\n                            fluid(maxWidth: 2048, quality: 64) {\r\n                                ...GatsbyImageSharpFluid\r\n                            }\r\n                        }\r\n                    }\r\n                    items {\r\n                        name\r\n                        date(formatString: \"D MMMM\", locale: \"es\")\r\n                    }\r\n                }\r\n                inandout {\r\n                    in {\r\n                        name\r\n                        location\r\n                        firstday(formatString: \"LL\", locale: \"es\")\r\n                    }\r\n                    out {\r\n                        name\r\n                        location\r\n                        lastday(formatString: \"LL\", locale: \"es\")\r\n                    }\r\n                }\r\n                myentrada {\r\n                    text\r\n                    cities {\r\n                        name\r\n                        image {\r\n                            childImageSharp {\r\n                                fluid(maxWidth: 2048, quality: 64) {\r\n                                    ...GatsbyImageSharpFluid\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAKA;AACA;AAPA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AAEA;AACA;AACA;AACA;AANA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAPA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3IA;AAsJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAUA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AADA;AAQA;AAAA;AAEA;;;;;;;;;;AA/LA;AAiKA;AA8BA;;;;;;;;;;;;;;A","sourceRoot":""}